<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl_DoWhenIdle manual page - Tcl Library Procedures</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.5.1/Tk8.5.1 Documentation</a> <small>&gt;</small> <a href="contents.htm">TclLib</a> <small>&gt;</small> DoWhenIdle</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../TclLib/contents.htm">Tcl Library</A> | <A HREF="../TkLib/contents.htm">Tk Library</A></H3>
<H3><A NAME="M2">NAME</A></H3>
Tcl_DoWhenIdle, Tcl_CancelIdleCall - invoke a procedure when there are no pending events
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
<B>Tcl_DoWhenIdle</B>(<I>proc, clientData</I>)<BR>
<B>Tcl_CancelIdleCall</B>(<I>proc, clientData</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL class="arguments">
<DT>Tcl_IdleProc <B>*proc</B> (in)<DD>
Procedure to invoke.
<P><DT>ClientData <B>clientData</B> (in)<DD>
Arbitrary one-word value to pass to <I>proc</I>.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
<B>Tcl_DoWhenIdle</B> arranges for <I>proc</I> to be invoked
when the application becomes idle.  The application is
considered to be idle when <B><A HREF="../TclLib/DoOneEvent.htm">Tcl_DoOneEvent</A></B> has been
called, could not find any events to handle, and is about
to go to sleep waiting for an event to occur.  At this
point all pending <B>Tcl_DoWhenIdle</B> handlers are
invoked.  For each call to <B>Tcl_DoWhenIdle</B> there will
be a single call to <I>proc</I>;  after <I>proc</I> is
invoked the handler is automatically removed.
<B>Tcl_DoWhenIdle</B> is only usable in programs that
use <B><A HREF="../TclLib/DoOneEvent.htm">Tcl_DoOneEvent</A></B> to dispatch events.
<P>
<I>Proc</I> should have arguments and result that match the
type <B>Tcl_IdleProc</B>:
<PRE>typedef void Tcl_IdleProc(ClientData <I>clientData</I>);</PRE>
The <I>clientData</I> parameter to <I>proc</I> is a copy of the <I>clientData</I>
argument given to <B>Tcl_DoWhenIdle</B>.  Typically, <I>clientData</I>
points to a data structure containing application-specific information about
what <I>proc</I> should do.
<P>
<B>Tcl_CancelIdleCall</B>
may be used to cancel one or more previous
calls to <B>Tcl_DoWhenIdle</B>:  if there is a <B>Tcl_DoWhenIdle</B>
handler registered for <I>proc</I> and <I>clientData</I>, then it
is removed without invoking it.  If there is more than one
handler on the idle list that refers to <I>proc</I> and <I>clientData</I>,
all of the handlers are removed.  If no existing handlers match
<I>proc</I> and <I>clientData</I> then nothing happens.
<P>
<B>Tcl_DoWhenIdle</B> is most useful in situations where
(a) a piece of work will have to be done but (b) it is
possible that something will happen in the near future
that will change what has to be done or require something
different to be done.  <B>Tcl_DoWhenIdle</B> allows the
actual work to be deferred until all pending events have
been processed.  At this point the exact work to be done
will presumably be known and it can be done exactly once.
<P>
For example, <B>Tcl_DoWhenIdle</B> might be used by an editor
to defer display updates until all pending commands have
been processed.  Without this feature, redundant redisplays
might occur in some situations, such as the processing of
a command file.
<H3><A NAME="M6">BUGS</A></H3>
At present it is not safe for an idle callback to reschedule itself
continuously.  This will interact badly with certain features of Tk
that attempt to wait for all idle callbacks to complete.  If you would
like for an idle callback to reschedule itself continuously, it is
better to use a timer handler with a zero timeout period.

<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#callback">callback</A>, <A href="../Keywords/D.htm#defer">defer</A>, <A href="../Keywords/I.htm#idle callback">idle callback</A>
<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 1990 The Regents of the University of California.
Copyright &copy; 1994-1996 Sun Microsystems, Inc.
</div>
</BODY></HTML>
