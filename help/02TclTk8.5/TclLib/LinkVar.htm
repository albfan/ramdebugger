<HTML><HEAD><TITLE>Tcl Library Procedures - Tcl_LinkVar manual page</TITLE></HEAD><BODY>
<DL>
<DD><A HREF="LinkVar.htm#M2" NAME="L413">NAME</A>
<DL><DD>Tcl_LinkVar, Tcl_UnlinkVar, Tcl_UpdateLinkedVar - link Tcl variable to C variable</DL>
<DD><A HREF="LinkVar.htm#M3" NAME="L414">SYNOPSIS</A>
<DL>
</DL>
<DD><A HREF="LinkVar.htm#M4" NAME="L415">ARGUMENTS</A>
<DL>
</DL>
<DD><A HREF="LinkVar.htm#M5" NAME="L416">DESCRIPTION</A>
<DL>
<DD><A HREF="LinkVar.htm#M6" NAME="L417"><B>TCL_LINK_INT</B></A>
<DD><A HREF="LinkVar.htm#M7" NAME="L418"><B>TCL_LINK_DOUBLE</B></A>
<DD><A HREF="LinkVar.htm#M8" NAME="L419"><B>TCL_LINK_WIDE_INT</B></A>
<DD><A HREF="LinkVar.htm#M9" NAME="L420"><B>TCL_LINK_BOOLEAN</B></A>
<DD><A HREF="LinkVar.htm#M10" NAME="L421"><B>TCL_LINK_STRING</B></A>
</DL>
<DD><A HREF="LinkVar.htm#M11" NAME="L422">KEYWORDS</A>
</DL><HR>
<H3><A NAME="M2">NAME</A></H3>
Tcl_LinkVar, Tcl_UnlinkVar, Tcl_UpdateLinkedVar - link Tcl variable to C variable
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
int<BR>
<B>Tcl_LinkVar</B>(<I>interp, varName, addr, type</I>)<BR>
<B>Tcl_UnlinkVar</B>(<I>interp, varName</I>)<BR>
<B>Tcl_UpdateLinkedVar</B>(<I>interp, varName</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<DT><A HREF="../TclLib/Interp.htm">Tcl_Interp</A> <B>*interp</B> (in)<DD>
Interpreter that contains <I>varName</I>.
Also used by <B>Tcl_LinkVar</B> to return error messages.
<P><DT>const char <B>*varName</B> (in)<DD>
Name of global variable.  
<P><DT>char <B>*addr</B> (in)<DD>
Address of C variable that is to be linked to <I>varName</I>.
<P><DT>int <B>type</B> (in)<DD>
Type of C variable.  Must be one of <B>TCL_LINK_INT</B>, <B>TCL_LINK_DOUBLE</B>,
<B>TCL_LINK_WIDE_INT</B>,
<B>TCL_LINK_BOOLEAN</B>, or <B>TCL_LINK_STRING</B>, optionally OR'ed with
<B>TCL_LINK_READ_ONLY</B> to make Tcl variable read-only.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
<B>Tcl_LinkVar</B> uses variable traces to keep the Tcl variable
named by <I>varName</I> in sync with the C variable at the address
given by <I>addr</I>.
Whenever the Tcl variable is read the value of the C variable will
be returned, and whenever the Tcl variable is written the C
variable will be updated to have the same value.
<B>Tcl_LinkVar</B> normally returns <B>TCL_OK</B>;  if an error occurs
while setting up the link (e.g. because <I>varName</I> is the
name of array) then <B>TCL_ERROR</B> is returned and the interpreter's result
contains an error message.
<P>
The <I>type</I> argument specifies the type of the C variable,
and must have one of the following values, optionally OR'ed with
<B>TCL_LINK_READ_ONLY</B>:
<P>
<DL>
<DT><A NAME="M6"><B>TCL_LINK_INT</B></A><DD>
The C variable is of type <B>int</B>.
Any value written into the Tcl variable must have a proper integer
form acceptable to <B><A HREF="../TclLib/IntObj.htm">Tcl_GetIntFromObj</A></B>;  attempts to write
non-integer values into <I>varName</I> will be rejected with
Tcl errors.
<P><DT><A NAME="M7"><B>TCL_LINK_DOUBLE</B></A><DD>
The C variable is of type <B>double</B>.
Any value written into the Tcl variable must have a proper real
form acceptable to <B><A HREF="../TclLib/DoubleObj.htm">Tcl_GetDoubleFromObj</A></B>;  attempts to write
non-real values into <I>varName</I> will be rejected with
Tcl errors.
<P><DT><A NAME="M8"><B>TCL_LINK_WIDE_INT</B></A><DD>
The C variable is of type <B>Tcl_WideInt</B> (which is an integer type
at least 64-bits wide on all platforms that can support it.)
Any value written into the Tcl variable must have a proper integer
form acceptable to <B><A HREF="../TclLib/IntObj.htm">Tcl_GetWideIntFromObj</A></B>;  attempts to write
non-integer values into <I>varName</I> will be rejected with
Tcl errors.
<P><DT><A NAME="M9"><B>TCL_LINK_BOOLEAN</B></A><DD>
The C variable is of type <B>int</B>.
If its value is zero then it will read from Tcl as ``0'';
otherwise it will read from Tcl as ``1''.
Whenever <I>varName</I> is
modified, the C variable will be set to a 0 or 1 value.
Any value written into the Tcl variable must have a proper boolean
form acceptable to <B><A HREF="../TclLib/BoolObj.htm">Tcl_GetBooleanFromObj</A></B>;  attempts to write
non-boolean values into <I>varName</I> will be rejected with
Tcl errors.
<P><DT><A NAME="M10"><B>TCL_LINK_STRING</B></A><DD>
The C variable is of type <B>char *</B>.
If its value is not NULL then it must be a pointer to a string
allocated with <B><A HREF="../TclLib/Alloc.htm">Tcl_Alloc</A></B> or <B><A HREF="../TclLib/Alloc.htm">ckalloc</A></B>.
Whenever the Tcl variable is modified the current C string will be
freed and new memory will be allocated to hold a copy of the variable's
new value.
If the C variable contains a NULL pointer then the Tcl variable
will read as ``NULL''.
<P></DL>
<P>
If the <B>TCL_LINK_READ_ONLY</B> flag is present in <I>type</I> then the
variable will be read-only from Tcl, so that its value can only be
changed by modifying the C variable.
Attempts to write the variable from Tcl will be rejected with errors.
<P>
<B>Tcl_UnlinkVar</B> removes the link previously set up for the
variable given by <I>varName</I>.  If there does not exist a link
for <I>varName</I> then the procedure has no effect.
<P>
<B>Tcl_UpdateLinkedVar</B> may be invoked after the C variable has
changed to force the Tcl variable to be updated immediately.
In many cases this procedure is not needed, since any attempt to
read the Tcl variable will return the latest value of the C variable.
However, if a trace has been set on the Tcl variable (such as a
Tk widget that wishes to display the value of the variable), the
trace will not trigger when the C variable has changed.
<B>Tcl_UpdateLinkedVar</B> ensures that any traces on the Tcl
variable are invoked.

<H3><A NAME="M11">KEYWORDS</A></H3>
<A href="../Keywords/B.htm#boolean">boolean</A>, <A href="../Keywords/I.htm#integer">integer</A>, <A href="../Keywords/L.htm#link">link</A>, <A href="../Keywords/R.htm#read-only">read-only</A>, <A href="../Keywords/R.htm#real">real</A>, <A href="../Keywords/S.htm#string">string</A>, <A href="../Keywords/T.htm#traces">traces</A>, <A href="../Keywords/V.htm#variable">variable</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1993 The Regents of the University of California.
<A HREF="../copyright.htm">Copyright</A> &#169; 1994-1996 Sun Microsystems, Inc.
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
