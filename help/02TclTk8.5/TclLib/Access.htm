<HTML><HEAD><TITLE>Tcl Library Procedures - Tcl_Access manual page</TITLE></HEAD><BODY>
<H3><A NAME="M2">NAME</A></H3>
Tcl_Access, Tcl_Stat - check file permissions and other attributes
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
int<BR>
<B>Tcl_Access</B>(<I>path</I>, <I>mode</I>)<BR>
int<BR>
<B>Tcl_Stat</B>(<I>path</I>, <I>statPtr</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<DT>char <B>*path</B> (in)<DD>
Native name of the file to check the attributes of.
<P><DT>int <B>mode</B> (in)<DD>
Mask consisting of one or more of R_OK, W_OK, X_OK and F_OK.  R_OK,
W_OK and X_OK request checking whether the file exists and  has  read,
write and  execute  permissions, respectively.  F_OK just requests
checking for the existence of the file.
<P><DT>struct stat <B>*statPtr</B> (out)<DD>
The structure that contains the result.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
As of Tcl 8.4, the object-based APIs <B><A HREF="../TclLib/FileSystem.htm">Tcl_FSAccess</A></B> and
<B><A HREF="../TclLib/FileSystem.htm">Tcl_FSStat</A></B> should be used in preference to <B>Tcl_Access</B> and
<B>Tcl_Stat</B>, wherever possible.
<P>
There are two reasons for calling <B>Tcl_Access</B> and <B>Tcl_Stat</B>
rather than calling system level functions <B>access</B> and <B>stat</B>
directly.  First, the Windows implementation of both functions fixes
some bugs in the system level calls.  Second, both <B>Tcl_Access</B>
and <B>Tcl_Stat</B> (as well as <B>Tcl_OpenFileChannelProc</B>) hook
into a linked list of functions.  This allows the possibility to reroute
file access to alternative media or access methods.
<P>
<B>Tcl_Access</B> checks whether the process would be allowed to read,
write or test for existence of the file (or other file system object)
whose name is pathname.   If pathname is a symbolic link on Unix,
then permissions of the file referred by this symbolic link are
tested.
<P>
On success (all requested permissions granted), zero is returned.  On
error (at least one bit in mode asked for a permission that is denied,
or some other  error occurred), -1 is returned.
<P>
<B>Tcl_Stat</B> fills the stat structure <I>statPtr</I> with information
about the specified file.  You do not need any access rights to the
file to get this information but you need search rights to all
directories named in the path leading to the file.  The stat structure
includes info regarding device, inode (always 0 on Windows),
privilege mode, nlink (always 1 on Windows), user id (always 0 on
Windows), group id (always 0 on Windows), rdev (same as device on
Windows), size, last access time, last modification time, and creation
time.
<P>
If <I>path</I> exists, <B>Tcl_Stat</B> returns 0 and the stat structure
is filled with data.  Otherwise, -1 is returned, and no stat info is
given.

<H3><A NAME="M6">KEYWORDS</A></H3>
<A href="../Keywords/S.htm#stat">stat</A>, <A href="../Keywords/A.htm#access">access</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1998-1999 Scriptics Corporation
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
