<HTML><HEAD><TITLE>Tcl Library Procedures - Tcl_Panic manual page</TITLE></HEAD><BODY>
<H3><A NAME="M2">NAME</A></H3>
Tcl_Panic, Tcl_PanicVA, Tcl_SetPanicProc - report fatal error and abort
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
void<BR>
<B>Tcl_Panic</B>(<I>format</I>, <I>arg</I>, <I>arg</I>, <I>...</I>)<BR>
void<BR>
<B>Tcl_PanicVA</B>(<I>format</I>, <I>argList</I>)<BR>
void<BR>
<B>Tcl_SetPanicProc</B>(<I>panicProc</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<DT>const char* <B><A HREF="../TclCmd/format.htm">format</A></B> (in)<DD>
A printf-style format string.
<P><DT><B>arg</B> (in)<DD>
Arguments matching the format string.
<P><DT>va_list <B>argList</B> (in)<DD>
An argument list of arguments matching the format string.
Must have been initialized using <B>TCL_VARARGS_START</B>,
and cleared using <B>va_end</B>.
<P><DT>Tcl_PanicProc <B>*panicProc</B> (in)<DD>
Procedure to report fatal error message and abort.

<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
When the Tcl library detects that its internal data structures are in an
inconsistent state, or that its C procedures have been called in a
manner inconsistent with their documentation, it calls <B>Tcl_Panic</B>
to display a message describing the error and abort the process.  The
<I>format</I> argument is a format string describing how to format the
remaining arguments <I>arg</I> into an error message, according to the
same formatting rules used by the <B>printf</B> family of functions.  The
same formatting rules are also used by the built-in Tcl command
<B><A HREF="../TclCmd/format.htm">format</A></B>.
<P>
In a freshly loaded Tcl library, <B>Tcl_Panic</B> prints the formatted
error message to the standard error file of the process, and then
calls <B>abort</B> to terminate the process.  <B>Tcl_Panic</B> does not
return.
<P>
<B>Tcl_SetPanicProc</B> may be used to modify the behavior of
<B>Tcl_Panic</B>.  The <I>panicProc</I> argument should match the
type <B>Tcl_PanicProc</B>:
<P>
<PRE>typedef void Tcl_PanicProc(
        const char *<B><A HREF="../TclCmd/format.htm">format</A></B>,
        <B>arg</B>, <B>arg</B>,...);</PRE>
<P>
After <B>Tcl_SetPanicProc</B> returns, any future calls to
<B>Tcl_Panic</B> will call <I>panicProc</I>, passing along the
<I>format</I> and <I>arg</I> arguments.  To maintain consistency with the
callers of <B>Tcl_Panic</B>, <I>panicProc</I> must not return; it must
call <B>abort</B>.  <I>panicProc</I> should avoid making calls into the
Tcl library, or into other libraries that may call the Tcl library,
since the original call to <B>Tcl_Panic</B> indicates the Tcl library is
not in a state of reliable operation.  
<P>
The typical use of <B>Tcl_SetPanicProc</B> arranges for the error message
to be displayed or reported in a manner more suitable for the
application or the platform.  As an example, the Windows implementation
of <B><A HREF="../UserCmd/wish.htm">wish</A></B> calls <B>Tcl_SetPanicProc</B> to force all panic messages
to be displayed in a system dialog box, rather than to be printed to the
standard error file (usually not visible under Windows).
<P>
Although the primary callers of <B>Tcl_Panic</B> are the procedures of
the Tcl library, <B>Tcl_Panic</B> is a public function and may be called
by any extension or application that wishes to abort the process and
have a panic message displayed the same way that panic messages from Tcl
will be displayed.
<P>
<B>Tcl_PanicVA</B> is the same as <B>Tcl_Panic</B> except that instead of
taking a variable number of arguments it takes an argument list.

<H3><A NAME="M6">SEE ALSO</A></H3>
<B>abort</B>, <B>printf</B>, <B><A HREF="../TclCmd/exec.htm">exec</A></B>, <B><A HREF="../TclCmd/format.htm">format</A></B>
<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/A.htm#abort">abort</A>, <A href="../Keywords/F.htm#fatal">fatal</A>, <A href="../Keywords/E.htm#error">error</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
