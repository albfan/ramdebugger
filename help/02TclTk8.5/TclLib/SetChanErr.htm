<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl_SetChannelError manual page - Tcl Library Procedures</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.5.1/Tk8.5.1 Documentation</a> <small>&gt;</small> <a href="contents.htm">TclLib</a> <small>&gt;</small> SetChanErr</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../TclLib/contents.htm">Tcl Library</A> | <A HREF="../TkLib/contents.htm">Tk Library</A></H3>
<DL>
<DD><A HREF="SetChanErr.htm#M2" NAME="L603">NAME</A>
<DL><DD>Tcl_SetChannelError, Tcl_SetChannelErrorInterp, Tcl_GetChannelError, Tcl_GetChannelErrorInterp - functions to create/intercept Tcl errors by channel drivers.</DD></DL>
<DD><A HREF="SetChanErr.htm#M3" NAME="L604">SYNOPSIS</A>
<DL>
<DD><B>#include &lt;tcl.h&gt;</B>
<DD>void
<DD><B>Tcl_SetChannelError</B>(<I>chan, msg</I>)
<DD>void
<DD><B>Tcl_SetChannelErrorInterp</B>(<I>interp, msg</I>)
<DD>void
<DD><B>Tcl_GetChannelError</B>(<I>chan, msgPtr</I>)
<DD>void
<DD><B>Tcl_GetChannelErrorInterp</B>(<I>interp, msgPtr</I>)
</DL>
<DD><A HREF="SetChanErr.htm#M4" NAME="L605">ARGUMENTS</A>
<DL class="arguments">
</DL>
<DD><A HREF="SetChanErr.htm#M5" NAME="L606">DESCRIPTION</A>
<DL class="description">
<DD><A HREF="SetChanErr.htm#M6" NAME="L607"><B>Tcl_DriverCloseProc</B></A>
<DD><A HREF="SetChanErr.htm#M7" NAME="L608"><B>Tcl_DriverInputProc</B></A>
<DD><A HREF="SetChanErr.htm#M8" NAME="L609"><B>Tcl_DriverOutputProc</B></A>
<DD><A HREF="SetChanErr.htm#M9" NAME="L610"><B>Tcl_DriverSeekProc</B></A>
<DD><A HREF="SetChanErr.htm#M10" NAME="L611"><B>Tcl_DriverWideSeekProc</B></A>
<DD><A HREF="SetChanErr.htm#M11" NAME="L612"><B>Tcl_DriverSetOptionProc</B></A>
<DD><A HREF="SetChanErr.htm#M12" NAME="L613"><B>Tcl_DriverGetOptionProc</B></A>
<DD><A HREF="SetChanErr.htm#M13" NAME="L614"><B>Tcl_DriverWatchProc</B></A>
<DD><A HREF="SetChanErr.htm#M14" NAME="L615"><B>Tcl_DriverBlockModeProc</B></A>
<DD><A HREF="SetChanErr.htm#M15" NAME="L616"><B>Tcl_DriverGetHandleProc</B></A>
<DD><A HREF="SetChanErr.htm#M16" NAME="L617"><B>Tcl_DriverHandlerProc</B></A>
</DL>
<DL class="description">
<DD><A HREF="SetChanErr.htm#M17" NAME="L618"><B>Tcl_StackChannel</B></A>
<DD><A HREF="SetChanErr.htm#M18" NAME="L619"><B>Tcl_Seek</B></A>
<DD><A HREF="SetChanErr.htm#M19" NAME="L620"><B>Tcl_Tell</B></A>
<DD><A HREF="SetChanErr.htm#M20" NAME="L621"><B>Tcl_ReadRaw</B></A>
<DD><A HREF="SetChanErr.htm#M21" NAME="L622"><B>Tcl_Read</B></A>
<DD><A HREF="SetChanErr.htm#M22" NAME="L623"><B>Tcl_ReadChars</B></A>
<DD><A HREF="SetChanErr.htm#M23" NAME="L624"><B>Tcl_Gets</B></A>
<DD><A HREF="SetChanErr.htm#M24" NAME="L625"><B>Tcl_GetsObj</B></A>
<DD><A HREF="SetChanErr.htm#M25" NAME="L626"><B>Tcl_Flush</B></A>
<DD><A HREF="SetChanErr.htm#M26" NAME="L627"><B>Tcl_WriteRaw</B></A>
<DD><A HREF="SetChanErr.htm#M27" NAME="L628"><B>Tcl_WriteObj</B></A>
<DD><A HREF="SetChanErr.htm#M28" NAME="L629"><B>Tcl_Write</B></A>
<DD><A HREF="SetChanErr.htm#M29" NAME="L630"><B>Tcl_WriteChars</B></A>
</DL>
<DL class="description">
<DD><A HREF="SetChanErr.htm#M30" NAME="L631"><B>Tcl_Close</B></A>
<DD><A HREF="SetChanErr.htm#M31" NAME="L632"><B>Tcl_UnregisterChannel</B></A>
<DD><A HREF="SetChanErr.htm#M32" NAME="L633"><B>Tcl_UnstackChannel</B></A>
</DL>
<DD><A HREF="SetChanErr.htm#M33" NAME="L634">SEE ALSO</A>
<DD><A HREF="SetChanErr.htm#M34" NAME="L635">KEYWORDS</A>
</DL>
<H3><A NAME="M2">NAME</A></H3>
Tcl_SetChannelError, Tcl_SetChannelErrorInterp, Tcl_GetChannelError, Tcl_GetChannelErrorInterp - functions to create/intercept Tcl errors by channel drivers.
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
void<BR>
<B>Tcl_SetChannelError</B>(<I>chan, msg</I>)<BR>
void<BR>
<B>Tcl_SetChannelErrorInterp</B>(<I>interp, msg</I>)<BR>
void<BR>
<B>Tcl_GetChannelError</B>(<I>chan, msgPtr</I>)<BR>
void<BR>
<B>Tcl_GetChannelErrorInterp</B>(<I>interp, msgPtr</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL class="arguments">
<DT>Tcl_Channel <B><A HREF="../TclCmd/chan.htm">chan</A></B> (in)<DD>
Refers to the Tcl channel whose bypass area is accessed.
<P><DT><A HREF="../TclLib/Interp.htm">Tcl_Interp</A>* <B><A HREF="../TclCmd/interp.htm">interp</A></B> (in)<DD>
Refers to the Tcl interpreter whose bypass area is accessed.
<P><DT>Tcl_Obj* <B>msg</B> (in)<DD>
Error message put into a bypass area.  A list of return options and
values, followed by a string message.  Both message and the
option/value information are optional.
<P><DT>Tcl_Obj** <B>msgPtr</B> (out)<DD>
Reference to a place where the message stored in the accessed bypass
area can be stored in.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
The current definition of a Tcl channel driver does not permit the
direct return of arbitrary error messages, except for the setting and
retrieval of channel options. All other functions are restricted to
POSIX error codes.
<P>
The functions described here overcome this limitation. Channel drivers
are allowed to use <B>Tcl_SetChannelError</B> and
<B>Tcl_SetChannelErrorInterp</B> to place arbitrary error messages in
<B>bypass areas</B><I> defined for channels and interpreters. And the
generic I/O layer uses </I><B>Tcl_GetChannelError</B> and
<B>Tcl_GetChannelErrorInterp</B> to look for messages in the bypass
areas and arrange for their return as errors. The posix error codes
set by a driver are used now if and only if no messages are present.
<P>
<B>Tcl_SetChannelError</B> stores error information in the bypass area
of the specified channel. The number of references to the <B>msg</B>
object goes up by one. Previously stored information will be
discarded, by releasing the reference held by the channel. The channel
reference must not be NULL.
<P>
<B>Tcl_SetChannelErrorInterp</B> stores error information in the bypass
area of the specified interpreter. The number of references to the
<B>msg</B> object goes up by one. Previously stored information will be
discarded, by releasing the reference held by the interpreter. The
interpreter reference must not be NULL.
<P>
<B>Tcl_GetChannelError</B> places either the error message held in the
bypass area of the specified channel into <I>msgPtr</I>, or NULL; and
resets the bypass. I.e. after an invokation all following invokations
will return NULL, until an intervening invokation of
<B>Tcl_SetChannelError</B> with a non-NULL message. The <I>msgPtr</I>
must not be NULL. The reference count of the message is not touched.
The reference previously held by the channel is now held by the caller
of the function and it is its responsibility to release that reference
when it is done with the object.
<P>
<B>Tcl_GetChannelErrorInterp</B> places either the error message held
in the bypass area of the specified interpreter into <I>msgPtr</I>, or
NULL; and resets the bypass. I.e. after an invokation all following
invokations will return NULL, until an intervening invokation of
<B>Tcl_SetChannelErrorInterp</B> with a non-NULL message. The
<I>msgPtr</I> must not be NULL. The reference count of the message is
not touched.  The reference previously held by the interpreter is now
held by the caller of the function and it is its responsibility to
release that reference when it is done with the object.
<P>
Which functions of a channel driver are allowed to use which bypass
function is listed below, as is which functions of the public channel
API may leave a messages in the bypass areas.
<P>
<P>
<DL class="description">
<DT><A NAME="M6"><B>Tcl_DriverCloseProc</B></A><DD>
May use <B>Tcl_SetChannelErrorInterp</B>, and only this function.
<P><DT><A NAME="M7"><B>Tcl_DriverInputProc</B></A><DD>
May use <B>Tcl_SetChannelError</B>, and only this function.
<P><DT><A NAME="M8"><B>Tcl_DriverOutputProc</B></A><DD>
May use <B>Tcl_SetChannelError</B>, and only this function.
<P><DT><A NAME="M9"><B>Tcl_DriverSeekProc</B></A><DD>
May use <B>Tcl_SetChannelError</B>, and only this function.
<P><DT><A NAME="M10"><B>Tcl_DriverWideSeekProc</B></A><DD>
May use <B>Tcl_SetChannelError</B>, and only this function.
<P><DT><A NAME="M11"><B>Tcl_DriverSetOptionProc</B></A><DD>
Has already the ability to pass arbitrary error messages. Must
<B>not</B> use any of the new functions.
<P><DT><A NAME="M12"><B>Tcl_DriverGetOptionProc</B></A><DD>
Has already the ability to pass arbitrary error messages. Must
<B>not</B> use any of the new functions.
<P><DT><A NAME="M13"><B>Tcl_DriverWatchProc</B></A><DD>
Must <B>not</B> use any of the new functions. Is internally called and
has no ability to return any type of error whatsoever.
<P><DT><A NAME="M14"><B>Tcl_DriverBlockModeProc</B></A><DD>
May use <B>Tcl_SetChannelError</B>, and only this function.
<P><DT><A NAME="M15"><B>Tcl_DriverGetHandleProc</B></A><DD>
Must <B>not</B> use any of the new functions. It is only a low-level
function, and not used by Tcl commands.
<P><DT><A NAME="M16"><B>Tcl_DriverHandlerProc</B></A><DD>
Must <B>not</B> use any of the new functions. Is internally called and
has no ability to return any type of error whatsoever.
<P></DL>
<P>
Given the information above the following public functions of the Tcl
C API are affected by these changes. I.e. when these functions are
called the channel may now contain a stored arbitrary error message
requiring processing by the caller.
<P>
<P>
<DL class="description">
<DT><A NAME="M17"><B>Tcl_StackChannel</B></A><DD>
<P><DT><A NAME="M18"><B>Tcl_Seek</B></A><DD>
<P><DT><A NAME="M19"><B>Tcl_Tell</B></A><DD>
<P><DT><A NAME="M20"><B>Tcl_ReadRaw</B></A><DD>
<P><DT><A NAME="M21"><B>Tcl_Read</B></A><DD>
<P><DT><A NAME="M22"><B>Tcl_ReadChars</B></A><DD>
<P><DT><A NAME="M23"><B>Tcl_Gets</B></A><DD>
<P><DT><A NAME="M24"><B>Tcl_GetsObj</B></A><DD>
<P><DT><A NAME="M25"><B>Tcl_Flush</B></A><DD>
<P><DT><A NAME="M26"><B>Tcl_WriteRaw</B></A><DD>
<P><DT><A NAME="M27"><B>Tcl_WriteObj</B></A><DD>
<P><DT><A NAME="M28"><B>Tcl_Write</B></A><DD>
<P><DT><A NAME="M29"><B>Tcl_WriteChars</B></A><DD>
<P></DL>
<P>
All other API functions are unchanged. Especially the functions below
leave all their error information in the interpreter result.
<P>
<P>
<DL class="description">
<DT><A NAME="M30"><B>Tcl_Close</B></A><DD>
<P><DT><A NAME="M31"><B>Tcl_UnregisterChannel</B></A><DD>
<P><DT><A NAME="M32"><B>Tcl_UnstackChannel</B></A><DD>
<P></DL>
<H3><A NAME="M33">SEE ALSO</A></H3>
<B><A HREF="../TclLib/OpenFileChnl.htm">Tcl_Close</A></B>, <B><A HREF="../TclLib/OpenFileChnl.htm">Tcl_OpenFileChannel</A></B>, <B><A HREF="../TclLib/SetErrno.htm">Tcl_SetErrno</A></B>
<H3><A NAME="M34">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#channel driver">channel driver</A>, <A href="../Keywords/E.htm#error messages">error messages</A>, <A href="../Keywords/C.htm#channel type">channel type</A>
<div class="copy">Copyright &copy; 1995-1997 Roger E. Critchlow Jr.
Copyright &copy; 2005 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
</div>
</BODY></HTML>
