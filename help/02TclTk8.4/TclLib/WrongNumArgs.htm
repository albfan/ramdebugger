<HTML><HEAD><TITLE>Tcl Library Procedures - Tcl_WrongNumArgs manual page</TITLE></HEAD><BODY>
<H3><A NAME="M2">NAME</A></H3>
Tcl_WrongNumArgs - generate standard error message for wrong number of arguments
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>#include &lt;tcl.h&gt;</B><BR>
<B>Tcl_WrongNumArgs</B>(<I>interp, objc, objv, message</I>)<BR>
<H3><A NAME="M4">ARGUMENTS</A></H3>
<DL>
<P><DT><A HREF="../TclLib/Interp.htm">Tcl_Interp</A> <B><A HREF="../TclCmd/interp.htm">interp</A></B> (in)<DD>
Interpreter in which error will be reported: error message gets stored
in its result object.
<P><DT>int <B>objc</B> (in)<DD>
Number of leading arguments from <I>objv</I> to include in error
message.
<P><DT>Tcl_Obj <B>*CONST objv[]</B> (in)<DD>
Arguments to command that had the wrong number of arguments.
<P><DT>CONST char <B>*message</B> (in)<DD>
Additional error information to print after leading arguments
from <I>objv</I>.  This typically gives the acceptable syntax
of the command.  This argument may be NULL.
<P></DL>
<H3><A NAME="M5">DESCRIPTION</A></H3>
<B>Tcl_WrongNumArgs</B> is a utility procedure that is invoked by
command procedures when they discover that they have received the
wrong number of arguments.  <B>Tcl_WrongNumArgs</B> generates a
standard error message and stores it in the result object of
<I>interp</I>.  The message includes the <I>objc</I> initial
elements of <I>objv</I> plus <I>message</I>.  For example, if
<I>objv</I> consists of the values <B>foo</B> and <B>bar</B>,
<I>objc</I> is 1, and <I>message</I> is ``<B>fileName count</B>''
then <I>interp</I>'s result object will be set to the following
string:
<PRE>wrong # args: should be &quot;foo fileName count&quot;</PRE>
If <I>objc</I> is 2, the result will be set to the following string:
<PRE>wrong # args: should be &quot;foo bar fileName count&quot;</PRE>
<I>Objc</I> is usually 1, but may be 2 or more for commands like
<B><A HREF="../TclCmd/string.htm">string</A></B> and the Tk widget commands, which use the first argument
as a subcommand.  
<P>
Some of the objects in the <I>objv</I> array may be abbreviations for
a subcommand.  The command
<B><A HREF="../TclLib/GetIndex.htm">Tcl_GetIndexFromObj</A></B> will convert the abbreviated string object
into an <I>indexObject</I>.  If an error occurs in the parsing of the
subcommand we would like to use the full subcommand name rather than
the abbreviation.  If the <B>Tcl_WrongNumArgs</B> command finds any
<I>indexObjects</I> in the <I>objv</I> array it will use the full subcommand
name in the error message instead of the abbreviated name that was
originally passed in.  Using the above example, lets assume that
<I>bar</I> is actually an abbreviation for <I>barfly</I> and the object
is now an indexObject because it was passed to
<B><A HREF="../TclLib/GetIndex.htm">Tcl_GetIndexFromObj</A></B>.  In this case the error message would be:
<PRE>wrong # args: should be &quot;foo barfly fileName count&quot;</PRE>
<H3><A NAME="M6">SEE ALSO</A></H3>
<B><A HREF="../TclLib/GetIndex.htm">Tcl_GetIndexFromObj</A></B>
<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#command">command</A>, <A href="../Keywords/E.htm#error message">error message</A>, <A href="../Keywords/W.htm#wrong number of arguments">wrong number of arguments</A>
<HR><PRE>
<A HREF="../copyright.htm">Copyright</A> &#169; 1994-1997 Sun Microsystems, Inc.
<A HREF="../copyright.htm">Copyright</A> &#169; 1995-1997 Roger E. Critchlow Jr.</PRE>
</BODY></HTML>
